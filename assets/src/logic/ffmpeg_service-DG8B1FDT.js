var w=Object.defineProperty;var d=(r,t,a)=>t in r?w(r,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):r[t]=a;var c=(r,t,a)=>d(r,typeof t!="symbol"?t+"":t,a);import{g as U}from"../lib/consts-Cj2W_VlV.js";import{d as y}from"../lib/data_store-DFUoucx7.js";import{a as S,s as $}from"../lib/helpers-CGQdiVDq.js";import{aJ as A,aK as f,aL as l,n as x}from"../../vendor-6J9SHA5K.js";const s=class s{constructor(){c(this,"ffmpeg");c(this,"progressPercentage");c(this,"logs");this.ffmpeg=new A,this.progressPercentage=0,this.logs=[],this.ffmpeg.on("progress",t=>{this.progressPercentage=parseInt((t.progress*100).toFixed(0)),this.progressPercentage>99.4&&(this.progressPercentage=0)}),this.ffmpeg.on("log",({message:t})=>{this.logs.push(t)})}static getInstance(){return s.instance||(s.instance=new s),s.instance}async load(){const t="https://unpkg.com/@ffmpeg/core@0.12.6/dist/esm";await this.ffmpeg.load({coreURL:await f(`${t}/ffmpeg-core.js`,"text/javascript"),wasmURL:await f(`${t}/ffmpeg-core.wasm`,"application/wasm")})}async saveOutput(t,a,p){await this.ffmpeg.writeFile("input.ogg",await l(t));const o=y.get(p)??{composer:"v1-Spacewar Glyph Composer",album:`BNGC v${U}`,custom2:"5cols",custom1:"eNoljVsKAEEIwy60A+r4qPe/2E7pj8FAiZ340vvYh8S7HjBiPB7ivUQ1ZexS3owkUJxlDGWOUZZfyqrmrs24awVahVFhVIAKUAEqrAqrwg8LSR98"},i=o.composer,n=o.album,e=o.custom1,h=o.custom2,g=`glyph_tone_${S()}.ogg`;await this.ffmpeg.exec(["-i","input.ogg","-strict","-2","-metadata",`AUTHOR=${a}`,"-metadata",`TITLE=output_${Date.now()}`,"-metadata",`COMPOSER=${i}`,"-metadata",`ALBUM=${n}`,"-metadata",`CUSTOM1=${e}`,"-metadata",`CUSTOM2=${h}`,"-c:a","opus","-vn","-map_metadata","0:s:a:0",`${g}`]);const u=await this.ffmpeg.readFile(`${g}`);x(u,g)}async getGlyphData(t){this.logs=[],await this.ffmpeg.writeFile("input.ogg",await l(t)),await this.ffmpeg.exec(["-i","input.ogg","-map","0","-c","copy","-f","ffmetadata","-"]);const a=this.extractAuthor(this.logs.join(`
`));return a||(console.warn("Input file is not a valid Glyph composed file!"),$("Import Error","Input file is not a valid Glyph composed file! But you can change that, by composing ;D",1800)),a}extractAuthor(t){const a=[],p=/AUTHOR\s*:\s*([\s\S]*?)(?:\n\s*\w+|$)/i,o=/AUTHOR\s*=\s*([^\n\r;]+)/,i=t.match(p),n=t.match(o);if(i&&i[1]){let e=i[1].trim().replace(/:/g,"");e=e.replace(/\s+/g,""),a.push(e)}if(n&&n[1]){let e=n[1].trim().replace(/:/g,"");e=e.replace(/\s+/g,""),a.push(e)}return!a[0]&&!a[1]?null:a}getFFmpegInstance(){return this.ffmpeg}getSaveProgress(){return this.progressPercentage}};c(s,"instance");let m=s;const B=m.getInstance();export{B as f};
