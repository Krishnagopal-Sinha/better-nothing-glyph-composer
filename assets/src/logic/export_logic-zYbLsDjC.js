import{d as i,f as u}from"../lib/consts-Cj2W_VlV.js";import{j as m}from"../lib/helpers-CGQdiVDq.js";import{aI as p}from"../../vendor-6J9SHA5K.js";function w(c){try{const t=p.deflate(c,{level:9});return btoa(String.fromCharCode(...new Uint8Array(t)))}catch(t){return console.error(`Error: while processing final glyph data -> ${t}`),null}}function S(c){function t(n){const a=window.atob(n),e=a.length,o=new Uint8Array(e);for(let s=0;s<e;s++)o[s]=a.charCodeAt(s);return o}function r(n){return n.replace(/[^A-Za-z0-9+/=]/g,"")}try{const n=t(r(c[0]));let a=p.inflate(n,{to:"string"});if(!a){console.log("Info: 1st import strategy failed, trying the 2nd one...");const e=t(r(c[1]));a=p.inflate(e,{to:"string"})}return y(a)}catch(n){console.error(`Error: while decompressing glyph data -> ${n}`)}}function y(c){function t(n){return n.trim().split(`
`).map(a=>a.split(",").filter(e=>e.trim()!=="").map(e=>{const o=e.trim();return o!==""?parseInt(o,10):0}))}const r=t(c);return m(r,3)}function g(c,t,r,n){r++;const a=e=>e<1?Math.ceil(e):Math.round(e);switch(c){case 0:return t;case 1:{const e=Math.sin(Math.PI*r/n);return a(t*e)}case 2:{const e=t/n;return a(e*r)}case 3:{const e=t/n;return a(t-e*(r-1))}case 4:{const e=Math.floor(n/2);if(r<=e){const o=t/e;return a(o*r)}else{const o=t/e;return a(t-o*(r-e))}}case 5:return r%30<30/2?t:0;case 6:{const e=Math.random(),o=Math.sin(Math.PI*e*r/n),s=t*o;return e>.9?u:e>.5?a(s):0}case 7:{const e=Math.floor(n/5);return r<e?a(t*(r/e)):r<2*e?a(t*(1-(r-e)/e)):r<3*e?a(t*.5*((r-2*e)/e)):r<4*e?a(t*.5*(1-(r-3*e)/e)):0}case 8:{const e=Math.random();return e>.8?u:e>.6?0:a(t*(.5+Math.random()*.5))}case 9:return r%(2*2)<2?t:0;case 10:{const e=n*.8,o=n*.2;if(r<=e){const s=r/e,f=Math.sin(s*Math.PI);return Math.round(t*f)}else{const s=(r-e)/o;return Math.round(t*(1-Math.pow(s,2)))}}case 11:{const o=Math.floor(1e3/i);return r%o<5?t:0}default:return u}}function k(c,t){const r=[],n=[];for(let e=0;e<Object.keys(c).length;e++)n.push(0);for(let e=0;e<Math.floor(t/i);e++)r.push([...n]);for(let e=0;e<Object.entries(c).length;e++)for(let o=0;o<c[e].length;o++){const s=c[e][o],f=Math.floor(s.startTimeMilis/i),d=Math.floor((s.startTimeMilis+s.durationMilis)/i);for(let l=f;l<d;l++){const h=l-f,M=s.effectData[h];r[l]||(r[l]=[...n]),r[l][e]=M}}return r.join(`,\r
`)+","}export{g as a,k as g,w as p,S as r};
